# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента. Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

def l1():
    l = ['a', 5, 5.1, None]
    for i in l:
        print(type(i))

# Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
def l2():
    l_str = input("Enter comma-separated values:")
    l = l_str.split(',')
    i = 0
    while i < len(l)-1:
        l[i], l[i+1] = l[i+1], l[i]
        i = i + 2
    print(l)

# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

def l3():
    month = input("Enter month number:")
    month_int = None if not month.isdigit() else int(month)
    if month_int is None:
        return

    #list
    seasons_list = ['Зима', 'Весна', 'Лето', 'Осень']
    print(seasons_list[(month_int+1) // 3 % 4])
    #dict
    seasons_dict = { 1 : 'Зима', 2 : 'Зима', 3 : 'Весна', 4 : 'Весна', 5 : 'Весна', 6 : 'Лето', 7 : 'Лето', 8 : 'Лето', 9 : 'Осень', 10 : 'Осень', 11 : 'Осень', 12 : 'Зима'}
    print(seasons_dict.get(month_int))


# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

def l4():
    str = input("Enter string:")
    l = str.split(' ')
    i = 1
    for word in l:
        print(f'{i}. {word.capitalize()[:10]}')
        i = i + 1

# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них

def l5():
    rating = [7, 5, 5, 4, 2, 1]
    print(rating)
    while True:
        inp = input("Enter next number:")
        inp_int = None if not inp.isdigit() else int(inp)
        if inp_int is None:
            return

        rev_rating = rating.copy()
        rev_rating.reverse()

        for i,x in enumerate(rev_rating):
            if x >= inp_int:
                rating.insert(len(rating)-i, inp_int)
                break
        print(rating)

# Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.

def l6():
    goods = []
    ind = 1
    props = dict()
    while True:
        props = {
                    "название": input("Enter name:"),
                    "цена": input("Enter price:"),
                    "количество": input("Enter count:"),
                    "единица измерения": input("Enter dimension:")
        }
        goods.append((ind, props))
        ind = ind + 1
        print(goods)

l1()
l2()
l3()
l4()
l5()
l6()